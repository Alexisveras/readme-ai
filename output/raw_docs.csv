file,summary
src/processor.py,"This Python script contains functions related to managing a codebase. The get_requirements() function uses the pipreqs library to generate a requirements.txt file for the project. The get_tmpdir() function returns a temporary directory path, deleting and recreating it if it already exists. The clone_codebase() function clones a git repository and installs the requirements.txt file. Finally, the parse_codebase() function parses a directory of python files and returns a dictionary of"
src/logger.py,"This Python script sets up a logger with a ColoredFormatter, which allows for different log levels to be printed in different colors. It also sets the log level to DEBUG."
src/model.py,"This script uses the OpenAI API to summarize the code in a specified GitHub repository. It takes in a language model and a dictionary of files and code, and returns a dictionary of file names and summaries. It skips the __init__ file and uses the OpenAI Completion API to generate summaries for each file."
src/builder.py,"This script is used to create an HTML file from a CSV file. It imports the Pandas library and a custom utils library. It defines two functions: get_pkg_icons() and create_html(). The get_pkg_icons() function takes a path to a JSON file and returns a dictionary of icons. The create_html() function takes a configuration object, a list of badges, a name, and a path to a CSV file. It creates a header for the HTML"
src/utils.py,"This Python script contains four functions. The first function, get_pkgs_list(), reads a requirements.txt file and returns a list of packages. The second function, read_json(), reads a json file and returns its contents as a dictionary. The third function, write_file(), writes a file to a given path. The fourth function, markdownify(), converts a string to markdown."
src/main.py,"""""""
This Python script is used to generate a Markdown documentation from a codebase. It uses the Hydra library to read a configuration file, clones the codebase from a given URL, parses the codebase, and converts the code into text. It then creates a Pandas DataFrame with the file names and summaries, and saves it to a CSV file. It also creates a list of packages used in the codebase, creates a header with badges, and creates an HTML file"
