src/conf.py,"This code defines a set of classes that are used to configure an application. The OpenAI class contains engine and sk_key fields, the GitHub class contains a url field, the HtmlObjs class contains head, body, and close fields, and the Paths class contains docs, html, mrkd, and pkgs fields. The AppConfig class contains api, html, paths, and store fields."
src/processor.py,"This code provides functions to clone a GitHub repository to a temporary directory, get file extensions and packages from the repository, and parse the repository into a dictionary of file contents."
src/logger.py,"This code sets up a logger with a ColoredFormatter, which will display log messages in different colors depending on the log level. It also sets the log level to DEBUG."
src/model.py,This code uses the OpenAI API to summarize the code in a Python script. It takes in an engine and a dictionary of files and code as parameters. It then creates a prompt with the code and uses the OpenAI API to generate a summary of the code. The summary is then added to a list of documents and returned.
src/builder.py,"This Python code is a function that creates an HTML page with a header and body. It takes in a configuration file, a list of badges, a name, and a path as parameters. It uses the pandas library to read a CSV file and iterates through the rows to create a summary and description for each file. It also uses a function called get_icons to map the names of packages to their corresponding badges."
src/utils.py,"""""""
This Python code defines a FileHandler class that can be used to read and write files in different formats. It has three methods: read_json(), write_html(), and write_md(). The read_json() method reads a JSON file and returns its contents. The write_html() and write_md() methods write HTML and Markdown files, respectively. The class takes an object as an argument and sets the paths for the JSON, HTML, and Markdown files."
src/main.py,"""""""
This code imports several modules and sets up a logger. It then loads a configuration file, clones a codebase, and creates a list of project dependencies. It then creates a header and HTML documentation, and writes the HTML to a file. Finally, it logs that the markdown documentation is complete. 
"""""""
