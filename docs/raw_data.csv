Module,Summary
scripts/run.sh,"This code is a Bash script that starts a Flink cluster, submits a PyFlink job, and then stops the Flink cluster."
src/sink.py,"This code creates a PyFlink application that consumes messages from a Kafka topic, checks if the data matches a Snowflake table, and then inserts the data into the Snowflake table if a match is found."
src/my_flink_consumer.py,This code sets up a Flink job pipeline to process XML data from a Kafka source and send alerts via an API call if the customer age is below a specified threshold.
src/nrt_alerts.py,This code sets up a Flink job pipeline to process XML data from a Kafka source and send alerts via an API call if the customer age is below a specified threshold.
src/kafka_snowflake_match.py,"This code creates a Flink job that reads messages from a Kafka topic, checks if the data matches a Snowflake table, and prints the results to the console."
src/send_alerts.py,"This code creates a stream pipeline that consumes data from a Kafka topic, processes it, and sends alerts via an API when a new booking is made for a hotel at a price below $100."
src/consumer.py,"This code is a Flink-Kafka consumer script that reads messages from a Kafka topic, applies a custom mapper function to the messages, and prints the results to the console."
src/main.py,"This example uses Flink State to maintain a count of incoming Kafka messages. The `MyMapper` class is defined as a separate mapper function, which is invoked for each message in the stream."
