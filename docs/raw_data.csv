module,summary
src/conf.py,"This code defines a class called AppConfig which contains five other classes: OpenAI, GitHub, Markdown, Paths, and AppConfig. Each of these classes contains variables that are used to store information related to the project."
src/processor.py,"This code is a function that clones a GitHub repository to a temporary directory, parses the codebase to get each file as a raw string, gets the file extensions and packages to help generate project badge icons, and creates an environment file."
src/logger.py,This code creates a Logger class that is used to log messages with different levels of severity. It imports the logging and colorlog modules and sets up a StreamHandler with a ColoredFormatter to format the log messages. It also provides methods for logging messages with different levels of severity.
src/model.py,This code is a Python function that uses the OpenAI Codex API to summarize Python code. It takes two parameters: an engine name and a dictionary of file names and code contents. It returns a dictionary of file names and code summaries. It also includes an exception handler for OpenAI API errors.
src/builder.py,"This code is a function that builds a markdown file from a configuration object, a list of packages, and a URL. It reads a CSV file, reads a JSON file, and uses the git library to clone a repository. It then formats the markdown file with the data from the CSV and JSON files, and the repository tree. It returns the formatted markdown file."
src/utils.py,FileFactory is a class that creates a file handler based on the file type of the file path provided. It contains a dictionary of file types and the corresponding file handler class. The FileHandler class is the parent class for all the file handler classes. Each file handler class has a read_file and write_file method that reads and writes the file based on the file type.
src/main.py,"""""""
This code is for a program called PydocsAI. It reads a configuration file, clones a codebase from a given URL, and uses an OpenAI engine to generate a summary of the code. It then writes the summary to a CSV file and builds the project readme docs. Finally, it logs that the processing is complete and the readme docs can be found in the docs folder."
packages,"The code provided is a list of Python libraries, including 'black', 'colorlog', 'coverage', 'dacite', 'flake8', 'GitPython', 'isort', 'openai', 'pandas', 'pipreqs', 'pytest', 'setuptools', 'tabulate', and 'toml'."
extensions,"The code provided is a list of file extensions. It includes Python (.py), Gitignore (.gitignore), Configuration (.config), HEAD (.HEAD), Makefile (.Makefile), Index (.index), JSON (.json), Packed-refs (.packed-refs), Pack (.pack), Description (.description), CSV (.csv), PNG (.png), IDX (.idx), Sample (.sample), Shell Script (.sh), Text (.txt), Markdown (.md), TOML (."
